/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int depth(TreeNode root,int count){
        if(root==null) return count;
        if (root.left==null && root.right==null){
            return count + 1;
        }
        else if (root.left==null){
            return depth(root.right,count+1);
        }
        else if (root.right==null){
            return depth(root.left,count+1);
        }
        else{
            return Math.max(depth(root.left,count+1),depth(root.right,count+1));
        }
    }
    public int maxDepth(TreeNode root) {
       int count = 0;
       return depth(root,count);
        
    }
}
